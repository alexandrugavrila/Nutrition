name: CI

on:
  push:
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nutrition
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d nutrition"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      PYTHONPATH: ${{ github.workspace }}
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/nutrition
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install backend dependencies
        run: |
          source scripts/activate-venv.sh
          pip install pytest
      - name: Run Alembic migrations
        run: |
          source scripts/activate-venv.sh
          alembic upgrade head
      - name: Backend tests
        run: |
          source scripts/activate-venv.sh
          pytest
      - name: Teardown database
        if: always()
        run: |
          source scripts/activate-venv.sh
          python - <<'PY'
          import os
          from sqlalchemy import create_engine, text
          engine = create_engine(os.environ['DATABASE_URL'])
          with engine.begin() as conn:
              conn.execute(text('DROP SCHEMA public CASCADE'))
              conn.execute(text('CREATE SCHEMA public'))
          PY

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install frontend dependencies
        working-directory: Frontend/nutrition-frontend
        run: npm ci
      - name: Frontend tests
        working-directory: Frontend/nutrition-frontend
        env:
          CI: true
        run: npm test -- --watchAll=false
