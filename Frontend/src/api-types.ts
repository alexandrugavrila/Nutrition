/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/ingredients/": {
    /**
     * Get All Ingredients
     * @description Return all ingredients.
     */
    get: operations["get_all_ingredients_api_ingredients__get"];
    /**
     * Add Ingredient
     * @description Create a new ingredient.
     */
    post: operations["add_ingredient_api_ingredients__post"];
  };
  "/api/ingredients/possible_tags": {
    /**
     * Get All Possible Tags
     * @description Return all possible ingredient tags ordered by name.
     */
    get: operations["get_all_possible_tags_api_ingredients_possible_tags_get"];
    /**
     * Create Possible Tag
     * @description Create a new possible ingredient tag.
     */
    post: operations["create_possible_tag_api_ingredients_possible_tags_post"];
  };
  "/api/ingredients/possible_tags/{tag_id}": {
    /**
     * Update Possible Tag
     * @description Update an existing possible ingredient tag.
     */
    put: operations["update_possible_tag_api_ingredients_possible_tags__tag_id__put"];
    /**
     * Delete Possible Tag
     * @description Delete a possible ingredient tag if not linked.
     */
    delete: operations["delete_possible_tag_api_ingredients_possible_tags__tag_id__delete"];
  };
  "/api/ingredients/{ingredient_id}": {
    /**
     * Get Ingredient
     * @description Retrieve a single ingredient by ID.
     */
    get: operations["get_ingredient_api_ingredients__ingredient_id__get"];
    /**
     * Update Ingredient
     * @description Update an existing ingredient.
     */
    put: operations["update_ingredient_api_ingredients__ingredient_id__put"];
    /**
     * Delete Ingredient
     * @description Delete an ingredient.
     */
    delete: operations["delete_ingredient_api_ingredients__ingredient_id__delete"];
  };
  "/api/meals/": {
    /**
     * Get All Meals
     * @description Return all meals.
     */
    get: operations["get_all_meals_api_meals__get"];
    /**
     * Add Meal
     * @description Create a new meal.
     */
    post: operations["add_meal_api_meals__post"];
  };
  "/api/meals/possible_tags": {
    /**
     * Get Possible Meal Tags
     * @description Return all possible meal tags ordered by name.
     */
    get: operations["get_possible_meal_tags_api_meals_possible_tags_get"];
    /**
     * Create Possible Meal Tag
     * @description Create a new possible meal tag.
     */
    post: operations["create_possible_meal_tag_api_meals_possible_tags_post"];
  };
  "/api/meals/possible_tags/{tag_id}": {
    /**
     * Update Possible Meal Tag
     * @description Update an existing possible meal tag.
     */
    put: operations["update_possible_meal_tag_api_meals_possible_tags__tag_id__put"];
    /**
     * Delete Possible Meal Tag
     * @description Delete a possible meal tag if not linked.
     */
    delete: operations["delete_possible_meal_tag_api_meals_possible_tags__tag_id__delete"];
  };
  "/api/meals/{meal_id}": {
    /**
     * Get Meal
     * @description Retrieve a single meal by ID.
     */
    get: operations["get_meal_api_meals__meal_id__get"];
    /**
     * Update Meal
     * @description Update an existing meal.
     */
    put: operations["update_meal_api_meals__meal_id__put"];
    /**
     * Delete Meal
     * @description Delete a meal.
     */
    delete: operations["delete_meal_api_meals__meal_id__delete"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * IngredientCreate
     * @description Schema for creating an ingredient.
     */
    IngredientCreate: {
      /** Name */
      name: string;
      nutrition?: components["schemas"]["NutritionCreate"] | null;
      /** Units */
      units?: components["schemas"]["IngredientUnitCreate"][];
      /** Tags */
      tags?: components["schemas"]["TagRef"][];
    };
    /**
     * IngredientRead
     * @description Schema for reading ingredient data.
     */
    IngredientRead: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      nutrition?: components["schemas"]["Nutrition"] | null;
      /** Units */
      units?: components["schemas"]["IngredientUnit"][];
      /** Tags */
      tags?: components["schemas"]["PossibleIngredientTag"][];
    };
    /**
     * IngredientUnit
     * @description Measurement unit for an ingredient.
     */
    IngredientUnit: {
      /** Id */
      id?: number | null;
      /** Ingredient Id */
      ingredient_id?: number | null;
      /** Name */
      name: string;
      /** Grams */
      grams: number;
    };
    /**
     * IngredientUnitCreate
     * @description Schema for creating ingredient unit data.
     */
    IngredientUnitCreate: {
      /** Name */
      name: string;
      /** Grams */
      grams: number;
    };
    /**
     * IngredientUpdate
     * @description Schema for updating an ingredient.
     */
    IngredientUpdate: {
      /** Name */
      name: string;
      nutrition?: components["schemas"]["NutritionCreate"] | null;
      /** Units */
      units?: components["schemas"]["IngredientUnitCreate"][];
      /** Tags */
      tags?: components["schemas"]["TagRef"][];
    };
    /**
     * MealCreate
     * @description Schema for creating a meal.
     */
    MealCreate: {
      /** Name */
      name: string;
      /** Ingredients */
      ingredients?: components["schemas"]["MealIngredientCreate"][];
      /** Tags */
      tags?: components["schemas"]["TagRef"][];
    };
    /**
     * MealIngredient
     * @description Link between a meal and an ingredient with quantity information.
     */
    MealIngredient: {
      /** Ingredient Id */
      ingredient_id?: number | null;
      /** Meal Id */
      meal_id?: number | null;
      /** Unit Id */
      unit_id?: number | null;
      /** Unit Quantity */
      unit_quantity?: number | null;
    };
    /**
     * MealIngredientCreate
     * @description Schema for creating meal ingredient linkage.
     */
    MealIngredientCreate: {
      /** Ingredient Id */
      ingredient_id: number;
      /** Unit Id */
      unit_id?: number | null;
      /** Unit Quantity */
      unit_quantity?: number | null;
    };
    /**
     * MealRead
     * @description Schema for reading meal data.
     */
    MealRead: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Ingredients */
      ingredients?: components["schemas"]["MealIngredient"][];
      /** Tags */
      tags?: components["schemas"]["PossibleMealTag"][];
    };
    /**
     * MealUpdate
     * @description Schema for updating a meal.
     */
    MealUpdate: {
      /** Name */
      name: string;
      /** Ingredients */
      ingredients?: components["schemas"]["MealIngredientCreate"][];
      /** Tags */
      tags?: components["schemas"]["TagRef"][];
    };
    /**
     * Nutrition
     * @description Nutritional information for a single ingredient.
     */
    Nutrition: {
      /** Id */
      id?: number | null;
      /** Ingredient Id */
      ingredient_id?: number | null;
      /** Calories */
      calories: number;
      /** Fat */
      fat: number;
      /** Carbohydrates */
      carbohydrates: number;
      /** Protein */
      protein: number;
      /** Fiber */
      fiber: number;
    };
    /**
     * NutritionCreate
     * @description Schema for creating nutrition data.
     */
    NutritionCreate: {
      /** Calories */
      calories: number;
      /** Fat */
      fat: number;
      /** Carbohydrates */
      carbohydrates: number;
      /** Protein */
      protein: number;
      /** Fiber */
      fiber: number;
    };
    /**
     * PossibleIngredientTag
     * @description Tag that can be associated with an ingredient.
     */
    PossibleIngredientTag: {
      /** Id */
      id?: number | null;
      /** Name */
      name: string;
      /** Group */
      group: string;
    };
    /**
     * PossibleIngredientTagCreate
     * @description Schema for creating a possible ingredient tag.
     */
    PossibleIngredientTagCreate: {
      /** Name */
      name: string;
      /** Group */
      group: string;
    };
    /**
     * PossibleIngredientTagUpdate
     * @description Schema for updating a possible ingredient tag.
     */
    PossibleIngredientTagUpdate: {
      /** Name */
      name?: string | null;
      /** Group */
      group?: string | null;
    };
    /**
     * PossibleMealTag
     * @description Tag that can be associated with a meal.
     */
    PossibleMealTag: {
      /** Id */
      id?: number | null;
      /** Name */
      name: string;
      /** Group */
      group: string;
    };
    /**
     * PossibleMealTagCreate
     * @description Schema for creating a possible meal tag.
     */
    PossibleMealTagCreate: {
      /** Name */
      name: string;
      /** Group */
      group: string;
    };
    /**
     * PossibleMealTagUpdate
     * @description Schema for updating a possible meal tag.
     */
    PossibleMealTagUpdate: {
      /** Name */
      name?: string | null;
      /** Group */
      group?: string | null;
    };
    /**
     * TagRef
     * @description Reference to an existing tag by ID.
     */
    TagRef: {
      /** Id */
      id: number;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get All Ingredients
   * @description Return all ingredients.
   */
  get_all_ingredients_api_ingredients__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["IngredientRead"][];
        };
      };
    };
  };
  /**
   * Add Ingredient
   * @description Create a new ingredient.
   */
  add_ingredient_api_ingredients__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["IngredientCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["IngredientRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get All Possible Tags
   * @description Return all possible ingredient tags ordered by name.
   */
  get_all_possible_tags_api_ingredients_possible_tags_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PossibleIngredientTag"][];
        };
      };
    };
  };
  /**
   * Create Possible Tag
   * @description Create a new possible ingredient tag.
   */
  create_possible_tag_api_ingredients_possible_tags_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PossibleIngredientTagCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["PossibleIngredientTag"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Update Possible Tag
   * @description Update an existing possible ingredient tag.
   */
  update_possible_tag_api_ingredients_possible_tags__tag_id__put: {
    parameters: {
      path: {
        tag_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PossibleIngredientTagUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PossibleIngredientTag"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Delete Possible Tag
   * @description Delete a possible ingredient tag if not linked.
   */
  delete_possible_tag_api_ingredients_possible_tags__tag_id__delete: {
    parameters: {
      path: {
        tag_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Ingredient
   * @description Retrieve a single ingredient by ID.
   */
  get_ingredient_api_ingredients__ingredient_id__get: {
    parameters: {
      path: {
        ingredient_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["IngredientRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Update Ingredient
   * @description Update an existing ingredient.
   */
  update_ingredient_api_ingredients__ingredient_id__put: {
    parameters: {
      path: {
        ingredient_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["IngredientUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["IngredientRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Delete Ingredient
   * @description Delete an ingredient.
   */
  delete_ingredient_api_ingredients__ingredient_id__delete: {
    parameters: {
      path: {
        ingredient_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get All Meals
   * @description Return all meals.
   */
  get_all_meals_api_meals__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MealRead"][];
        };
      };
    };
  };
  /**
   * Add Meal
   * @description Create a new meal.
   */
  add_meal_api_meals__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MealCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["MealRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Possible Meal Tags
   * @description Return all possible meal tags ordered by name.
   */
  get_possible_meal_tags_api_meals_possible_tags_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PossibleMealTag"][];
        };
      };
    };
  };
  /**
   * Create Possible Meal Tag
   * @description Create a new possible meal tag.
   */
  create_possible_meal_tag_api_meals_possible_tags_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PossibleMealTagCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["PossibleMealTag"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Update Possible Meal Tag
   * @description Update an existing possible meal tag.
   */
  update_possible_meal_tag_api_meals_possible_tags__tag_id__put: {
    parameters: {
      path: {
        tag_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PossibleMealTagUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PossibleMealTag"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Delete Possible Meal Tag
   * @description Delete a possible meal tag if not linked.
   */
  delete_possible_meal_tag_api_meals_possible_tags__tag_id__delete: {
    parameters: {
      path: {
        tag_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Meal
   * @description Retrieve a single meal by ID.
   */
  get_meal_api_meals__meal_id__get: {
    parameters: {
      path: {
        meal_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MealRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Update Meal
   * @description Update an existing meal.
   */
  update_meal_api_meals__meal_id__put: {
    parameters: {
      path: {
        meal_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MealUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MealRead"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Delete Meal
   * @description Delete a meal.
   */
  delete_meal_api_meals__meal_id__delete: {
    parameters: {
      path: {
        meal_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
