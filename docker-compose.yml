version: "3.9"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: nutrition_user
      POSTGRES_PASSWORD: nutrition_pass
      POSTGRES_DB: nutrition
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./Database:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - nutrition-net

  backend:
    build:
      context: .
      dockerfile: Backend/Dockerfile
    environment:
      FLASK_ENV: development
      DATABASE_URL: postgresql://nutrition_user:nutrition_pass@db:5432/nutrition
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./Backend:/app
    develop:
      # Sync backend source code into the container and rebuild when dependencies change
      watch:
        - action: sync
          path: ./Backend
          target: /app
      rebuild:
        - Backend/requirements.txt
    command: flask --app backend.py --debug run --host=0.0.0.0
    networks:
      - nutrition-net
    ports:
      - "${BACKEND_PORT:-5000}:5000"

  frontend:
    build:
      context: .
      dockerfile: Frontend/Dockerfile
      target: dev
    depends_on:
      - backend
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
    develop:
      # Sync frontend source code and rebuild the image when package.json changes
      watch:
        - action: sync
          path: ./Frontend
          target: /app
      rebuild:
        - Frontend/package.json
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    networks:
      - nutrition-net

volumes:
  dbdata:


networks:
  nutrition-net:
