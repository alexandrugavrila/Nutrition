{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/ingredients/": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "Get All Ingredients",
        "description": "Return all ingredients.",
        "operationId": "get_all_ingredients_api_ingredients__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IngredientRead"
                  },
                  "type": "array",
                  "title": "Response Get All Ingredients Api Ingredients  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ingredients"
        ],
        "summary": "Add Ingredient",
        "description": "Create a new ingredient.",
        "operationId": "add_ingredient_api_ingredients__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ingredients/possible_tags": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "Get All Possible Tags",
        "description": "Return all possible ingredient tags ordered by name.",
        "operationId": "get_all_possible_tags_api_ingredients_possible_tags_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PossibleIngredientTag"
                  },
                  "type": "array",
                  "title": "Response Get All Possible Tags Api Ingredients Possible Tags Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ingredients"
        ],
        "summary": "Create Possible Tag",
        "description": "Create a new possible ingredient tag.",
        "operationId": "create_possible_tag_api_ingredients_possible_tags_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PossibleIngredientTagCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PossibleIngredientTag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ingredients/possible_tags/{tag_id}": {
      "put": {
        "tags": [
          "ingredients"
        ],
        "summary": "Update Possible Tag",
        "description": "Update an existing possible ingredient tag.",
        "operationId": "update_possible_tag_api_ingredients_possible_tags__tag_id__put",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tag Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PossibleIngredientTagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PossibleIngredientTag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ingredients"
        ],
        "summary": "Delete Possible Tag",
        "description": "Delete a possible ingredient tag if not linked.",
        "operationId": "delete_possible_tag_api_ingredients_possible_tags__tag_id__delete",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Possible Tag Api Ingredients Possible Tags  Tag Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ingredients/{ingredient_id}": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "Get Ingredient",
        "description": "Retrieve a single ingredient by ID.",
        "operationId": "get_ingredient_api_ingredients__ingredient_id__get",
        "parameters": [
          {
            "name": "ingredient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ingredient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ingredients"
        ],
        "summary": "Update Ingredient",
        "description": "Update an existing ingredient.",
        "operationId": "update_ingredient_api_ingredients__ingredient_id__put",
        "parameters": [
          {
            "name": "ingredient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ingredient Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ingredients"
        ],
        "summary": "Delete Ingredient",
        "description": "Delete an ingredient.",
        "operationId": "delete_ingredient_api_ingredients__ingredient_id__delete",
        "parameters": [
          {
            "name": "ingredient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ingredient Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Ingredient Api Ingredients  Ingredient Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/meals/": {
      "get": {
        "tags": [
          "meals"
        ],
        "summary": "Get All Meals",
        "description": "Return all meals.",
        "operationId": "get_all_meals_api_meals__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MealRead"
                  },
                  "type": "array",
                  "title": "Response Get All Meals Api Meals  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "meals"
        ],
        "summary": "Add Meal",
        "description": "Create a new meal.",
        "operationId": "add_meal_api_meals__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MealCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/meals/possible_tags": {
      "get": {
        "tags": [
          "meals"
        ],
        "summary": "Get Possible Meal Tags",
        "description": "Return all possible meal tags ordered by name.",
        "operationId": "get_possible_meal_tags_api_meals_possible_tags_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PossibleMealTag"
                  },
                  "type": "array",
                  "title": "Response Get Possible Meal Tags Api Meals Possible Tags Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "meals"
        ],
        "summary": "Create Possible Meal Tag",
        "description": "Create a new possible meal tag.",
        "operationId": "create_possible_meal_tag_api_meals_possible_tags_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PossibleMealTagCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PossibleMealTag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/meals/possible_tags/{tag_id}": {
      "put": {
        "tags": [
          "meals"
        ],
        "summary": "Update Possible Meal Tag",
        "description": "Update an existing possible meal tag.",
        "operationId": "update_possible_meal_tag_api_meals_possible_tags__tag_id__put",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tag Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PossibleMealTagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PossibleMealTag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "meals"
        ],
        "summary": "Delete Possible Meal Tag",
        "description": "Delete a possible meal tag if not linked.",
        "operationId": "delete_possible_meal_tag_api_meals_possible_tags__tag_id__delete",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Possible Meal Tag Api Meals Possible Tags  Tag Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/meals/{meal_id}": {
      "get": {
        "tags": [
          "meals"
        ],
        "summary": "Get Meal",
        "description": "Retrieve a single meal by ID.",
        "operationId": "get_meal_api_meals__meal_id__get",
        "parameters": [
          {
            "name": "meal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Meal Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "meals"
        ],
        "summary": "Update Meal",
        "description": "Update an existing meal.",
        "operationId": "update_meal_api_meals__meal_id__put",
        "parameters": [
          {
            "name": "meal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Meal Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MealUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "meals"
        ],
        "summary": "Delete Meal",
        "description": "Delete a meal.",
        "operationId": "delete_meal_api_meals__meal_id__delete",
        "parameters": [
          {
            "name": "meal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Meal Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Meal Api Meals  Meal Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IngredientCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nutrition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NutritionCreate"
              },
              {
                "type": "null"
              }
            ]
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/IngredientUnitCreate"
            },
            "type": "array",
            "title": "Units"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagRef"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "IngredientCreate",
        "description": "Schema for creating an ingredient."
      },
      "IngredientRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nutrition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Nutrition"
              },
              {
                "type": "null"
              }
            ]
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/IngredientUnit"
            },
            "type": "array",
            "title": "Units"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/PossibleIngredientTag"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "IngredientRead",
        "description": "Schema for reading ingredient data."
      },
      "IngredientUnit": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "ingredient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingredient Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "grams": {
            "type": "number",
            "title": "Grams"
          }
        },
        "type": "object",
        "required": [
          "name",
          "grams"
        ],
        "title": "IngredientUnit",
        "description": "Measurement unit for an ingredient."
      },
      "IngredientUnitCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "grams": {
            "type": "number",
            "title": "Grams"
          }
        },
        "type": "object",
        "required": [
          "name",
          "grams"
        ],
        "title": "IngredientUnitCreate",
        "description": "Schema for creating ingredient unit data."
      },
      "IngredientUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nutrition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NutritionCreate"
              },
              {
                "type": "null"
              }
            ]
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/IngredientUnitCreate"
            },
            "type": "array",
            "title": "Units"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagRef"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "IngredientUpdate",
        "description": "Schema for updating an ingredient."
      },
      "MealCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "ingredients": {
            "items": {
              "$ref": "#/components/schemas/MealIngredientCreate"
            },
            "type": "array",
            "title": "Ingredients"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagRef"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "MealCreate",
        "description": "Schema for creating a meal."
      },
      "MealIngredient": {
        "properties": {
          "ingredient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingredient Id"
          },
          "meal_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meal Id"
          },
          "unit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Id"
          },
          "unit_quantity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Quantity"
          }
        },
        "type": "object",
        "title": "MealIngredient",
        "description": "Link between a meal and an ingredient with quantity information."
      },
      "MealIngredientCreate": {
        "properties": {
          "ingredient_id": {
            "type": "integer",
            "title": "Ingredient Id"
          },
          "unit_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Id"
          },
          "unit_quantity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit Quantity"
          }
        },
        "type": "object",
        "required": [
          "ingredient_id"
        ],
        "title": "MealIngredientCreate",
        "description": "Schema for creating meal ingredient linkage."
      },
      "MealRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "ingredients": {
            "items": {
              "$ref": "#/components/schemas/MealIngredient"
            },
            "type": "array",
            "title": "Ingredients"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/PossibleMealTag"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "MealRead",
        "description": "Schema for reading meal data."
      },
      "MealUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "ingredients": {
            "items": {
              "$ref": "#/components/schemas/MealIngredientCreate"
            },
            "type": "array",
            "title": "Ingredients"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagRef"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "MealUpdate",
        "description": "Schema for updating a meal."
      },
      "Nutrition": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "ingredient_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingredient Id"
          },
          "calories": {
            "type": "number",
            "title": "Calories"
          },
          "fat": {
            "type": "number",
            "title": "Fat"
          },
          "carbohydrates": {
            "type": "number",
            "title": "Carbohydrates"
          },
          "protein": {
            "type": "number",
            "title": "Protein"
          },
          "fiber": {
            "type": "number",
            "title": "Fiber"
          }
        },
        "type": "object",
        "required": [
          "calories",
          "fat",
          "carbohydrates",
          "protein",
          "fiber"
        ],
        "title": "Nutrition",
        "description": "Nutritional information for a single ingredient."
      },
      "NutritionCreate": {
        "properties": {
          "calories": {
            "type": "number",
            "title": "Calories"
          },
          "fat": {
            "type": "number",
            "title": "Fat"
          },
          "carbohydrates": {
            "type": "number",
            "title": "Carbohydrates"
          },
          "protein": {
            "type": "number",
            "title": "Protein"
          },
          "fiber": {
            "type": "number",
            "title": "Fiber"
          }
        },
        "type": "object",
        "required": [
          "calories",
          "fat",
          "carbohydrates",
          "protein",
          "fiber"
        ],
        "title": "NutritionCreate",
        "description": "Schema for creating nutrition data."
      },
      "PossibleIngredientTag": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "group": {
            "type": "string",
            "title": "Group"
          }
        },
        "type": "object",
        "required": [
          "name",
          "group"
        ],
        "title": "PossibleIngredientTag",
        "description": "Tag that can be associated with an ingredient."
      },
      "PossibleIngredientTagCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "group": {
            "type": "string",
            "title": "Group"
          }
        },
        "type": "object",
        "required": [
          "name",
          "group"
        ],
        "title": "PossibleIngredientTagCreate",
        "description": "Schema for creating a possible ingredient tag."
      },
      "PossibleIngredientTagUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group"
          }
        },
        "type": "object",
        "title": "PossibleIngredientTagUpdate",
        "description": "Schema for updating a possible ingredient tag."
      },
      "PossibleMealTag": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "group": {
            "type": "string",
            "title": "Group"
          }
        },
        "type": "object",
        "required": [
          "name",
          "group"
        ],
        "title": "PossibleMealTag",
        "description": "Tag that can be associated with a meal."
      },
      "PossibleMealTagCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "group": {
            "type": "string",
            "title": "Group"
          }
        },
        "type": "object",
        "required": [
          "name",
          "group"
        ],
        "title": "PossibleMealTagCreate",
        "description": "Schema for creating a possible meal tag."
      },
      "PossibleMealTagUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group"
          }
        },
        "type": "object",
        "title": "PossibleMealTagUpdate",
        "description": "Schema for updating a possible meal tag."
      },
      "TagRef": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "TagRef",
        "description": "Reference to an existing tag by ID."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}